{"version":3,"sources":["reducers/gameReducer.js","reducers/index-reducer.js","components/modal.js","components/gameApp.js","container/gameContainer.js","App.js","index.js"],"names":["initialState","inputValue","show","showModalCreator","value","type","gameReducer","state","arguments","length","undefined","action","_objectSpread","reducers","combineReducers","register","store","createStore","window","connect","dispatch","showModal","props","aiWin","youWin","handleClose","location","reload","react_default","a","createElement","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","GameApp","_useState","useState","_useState2","Object","slicedToArray","isActive","setIsActive","_useState3","_useState4","seconds","setSeconds","_useState5","_useState6","random","setRandom","_useState7","_times","Number","arr","_useState9","_useState10","green","setGreen","_useState11","_useState12","red","setRed","_useState13","_useState14","endTimes","setEndTimes","_useState15","_useState16","setYouWin","_useState17","_useState18","setAiWin","_useState19","_useState20","oneClick","setOneClick","secondsRedux","disabledButton","_useState21","_useState22","arrRandom","serArrRandom","randomNumber","number","_sample","filter","n","handleNextGame","whoWin","showModalDispatch","handleClick","e","target","id","concat","toConsumableArray","useEffect","interval","setInterval","sec","prev","clearInterval","className","placeholder","onChange","inputSec","map","el","i","key","classNames","blue","yellow","includes","disabled","modal","gameContainer","text","gameApp","App","container_gameContainer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2d64583f.chunk.js","sourcesContent":["\nconst initialState = {\n  inputValue: 0,\n  show: false,\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INPUT_SEC':\n      return {\n        ...state,\n        inputValue: action.value,\n      };\n    case 'SHOW_MODAL':\n      return {\n        ...state,\n        show: action.value,\n        };\n    default:\n      return state;\n  }\n};\n\nexport const inputNameCreator = values => ({ type: 'INPUT_SEC', value: values });\n\nexport const showModalCreator = value => ({ type: 'SHOW_MODAL', value });\n\nexport default gameReducer;\n","import { combineReducers, createStore } from 'redux';\nimport gameReducer from './gameReducer';\n\nconst reducers = combineReducers({\n  register: gameReducer,\n});\n\nconst store = createStore(reducers);\n\nwindow.store = store;\nexport default store;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { showModalCreator} from '../reducers/gameReducer';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst ModalComponent = (props) => {\n  const show = props.register.show;\n  const aiWin = props.aiWin;\n  const youWin = props.youWin;\n\n  const handleClose = () => (       //функция для диспатча в редакс и закрытия модпльного окна\n    props.showModal(false),\n    window.location.reload()\n  );\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{aiWin > youWin ? 'AI WIN' : 'YOU WIN'}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Modal.Title>\n            Next Game ?\n        </Modal.Title>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Ok\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    register: state.register,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showModal: (value) => {\n      dispatch(showModalCreator(value));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalComponent);;\n","import React, { useState, useEffect } from 'react';\nimport _times from 'lodash/times';\nimport _sample from 'lodash/sample';\nimport _remove from 'lodash/sample';\nimport classNames from 'classnames';\nimport Modal from '../components/modal';\n\nconst GameApp = (props) => {\n  const [isActive, setIsActive] = useState(false);\n  const [seconds, setSeconds] = useState();\n  const [random, setRandom] = useState();\n  const [arr] = useState(_times(100, Number)); // массив от 0-100\n  const [green, setGreen] = useState([]);\n  const [red, setRed] = useState([]);\n  const [endTimes, setEndTimes] = useState(false);\n  const [youWin, setYouWin] = useState(0);\n  const [aiWin, setAiWin] = useState(0);\n  const [oneClick, setOneClick] = useState(false);\n  const WIN_POINT = 9;\n  const secondsRedux = props.register.inputValue;\n  const disabledButton = secondsRedux > 0 ? false : true;\n  const [arrRandom, serArrRandom] = useState(_times(100, Number));  // массив от 0-100\n\n  const randomNumber = () => {  // для вычисления рандомного числа по которому ДИВ нужно нажать\n    let number = _sample(arrRandom); // рандомный элемент из масива что бы не повторялись числа.\n    serArrRandom(arrRandom.filter(n => n != number))\n    setRandom(number);\n  };\n\n  const handleStartGame = () => (\n    setSeconds(secondsRedux),\n    randomNumber(),\n    setIsActive(true)\n  );\n\n  const handleNextGame = () => (\n    setSeconds(secondsRedux),\n    setEndTimes(false),\n    randomNumber(),\n    setOneClick(false),\n    setIsActive(true)\n  );\n\n  const whoWin = () => {  // для определения кто выиграл и нужно ли закончить игру\n    if (aiWin === WIN_POINT || youWin === WIN_POINT) {\n      setSeconds(0);\n      showModalDispatch(true);\n    } else {\n      return\n    }\n  };\n\n  const handleClick = (e) => {  // определение правильности выбора и  случайных нажатий\n    if (isActive || endTimes) {\n    if (random === +e.target.id && !endTimes && !oneClick) {\n      setGreen([...green, +e.target.id]);\n      setOneClick(true);\n      setYouWin(youWin + 1);\n      whoWin();\n      handleNextGame();\n    } else {\n      setRed([...red, random]);\n      setOneClick(true);\n      setAiWin((oneClick ? aiWin + 0 : aiWin + 1));\n      whoWin();\n      handleNextGame();\n    }\n  } else {\n    return;\n  }\n  };\n\n  useEffect(() => {  // в хуке делаю интервал для отсчета времени\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(sec => {\n          if (sec === 0) {\n            setEndTimes(true);\n            setIsActive(false);\n            setAiWin(prev => prev + 1);\n            whoWin();\n          } else {\n            return sec - 1;\n          }\n        });\n      }, 50);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive]);\n\n  const inputSeconds = e => (   // для диспатча значения из инпута в стайте редакса\n    props.inputSec(e.target.value)\n  );\n\n  const showModalDispatch = e => ( // для диспатча значения из инпута в стайте редакса\n    props.showModal(e)\n  );\n\n  return (\n    <div className=\"game\">\n      <input\n        type=\"number\"\n        className=\"form-control\"\n        placeholder=\"Choose your speed (ms)\"\n        onChange={inputSeconds}\n      />\n      <h1 className=\"h1\">{seconds}</h1>\n\n      <div className=\"container-score\">\n        <h2>Score</h2>\n        <div className=\"score\">\n          <div className=\"text-one\">You:</div>\n          <div className=\"text-two\">{youWin}</div>\n          <div className=\"text-one\">AI:</div>\n          <div className=\"text-two\">{aiWin}</div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {arr.map((el, i) => (\n          <div\n            key={el}\n            className={classNames({\n              'blue': true,\n              'yellow': random === i && !oneClick,\n              'green': green.includes(i),\n              'red': red.includes(i),\n                })}\n            id={i}\n            onClick={handleClick}\n          >\n          </div>\n        ))}\n      </div>\n\n      <div className=\"container-box\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-sm\"\n          disabled={disabledButton}\n          onClick={handleStartGame}\n        >\n              START\n        </button>\n      </div>\n\n      <Modal aiWin={aiWin} youWin={youWin}/>\n    </div>\n  );\n};\n\nexport default GameApp;\n","/*eslint-disable*/\nimport { connect } from 'react-redux';\nimport { showModalCreator, inputNameCreator } from '../reducers/gameReducer';\nimport gameApp from '../components/gameApp';\n\nconst mapStateToProps = (state) => {\n  return {\n    register: state.register,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    inputSec: (text) => {\n      dispatch(inputNameCreator(text));\n    },\n    showModal: (value) => {\n      dispatch(showModalCreator(value));\n    },\n  };\n};\n\nconst gameContainer = connect(mapStateToProps, mapDispatchToProps)(gameApp);\n\nexport default gameContainer;\n","import React from 'react';\nimport GameContainer from './container/gameContainer';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <GameContainer />\n  </div>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducers/index-reducer';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}